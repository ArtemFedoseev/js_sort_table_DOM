{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","employees","headers","children","compareStrings","a","b","index","stringA","innerText","stringB","localeCompare","compareNumbers","numA","getNumber","line","replace","forEach","header","container","createElement","append","firstChild","addEventListener","e","target","tagName","sortBy","findIndex","callback","toLowerCase","sortedList","sort","employee"],"mappings":"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","file":"main.a1687268.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst table = document.querySelector('table');\r\nconst employees = document.querySelector('tbody');\r\nconst headers = document.querySelector('thead').children[0].children;\r\n\r\n[...headers].forEach(header => {\r\n  const container = document.createElement('span');\r\n\r\n  container.append(header.firstChild);\r\n  header.append(container);\r\n});\r\n\r\ntable.addEventListener('click', function(e) {\r\n  if (e.target.tagName !== 'SPAN') {\r\n    return;\r\n  }\r\n\r\n  const sortBy = e.target.innerText;\r\n  const index = [...headers].findIndex(header => header.innerText === sortBy);\r\n  let callback = null;\r\n\r\n  switch (sortBy.toLowerCase()) {\r\n    case 'name':\r\n    case 'position':\r\n      callback = compareStrings;\r\n      break;\r\n    case 'age':\r\n    case 'salary':\r\n      callback = compareNumbers;\r\n      break;\r\n  }\r\n\r\n  const sortedList = [...employees.children].sort((a, b) => {\r\n    return callback(a, b, index);\r\n  });\r\n\r\n  for (const employee of sortedList) {\r\n    employees.append(employee);\r\n  }\r\n});\r\n\r\nfunction compareStrings(a, b, index) {\r\n  const stringA = a.children[index].innerText;\r\n  const stringB = b.children[index].innerText;\r\n\r\n  return stringA.localeCompare(stringB);\r\n}\r\n\r\nfunction compareNumbers(a, b, index) {\r\n  const numA = getNumber(a.children[index].innerText);\r\n  const numB = getNumber(b.children[index].innerText);\r\n\r\n  return numA - numB;\r\n}\r\n\r\nfunction getNumber(line) {\r\n  return +line.replace('$', '').replace(',', '');\r\n}\r\n"]}